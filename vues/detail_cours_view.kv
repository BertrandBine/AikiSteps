#: kivy 1.9.1
#:import Cours_Steps  modeles.cours_steps.Cours_Steps


<Detail_Cours_View>:
    id: DCV
    le_cours: self.get_cours_data()
    BoxLayout:
        orientation: 'vertical'
        id: w00
        BoxLayout:
            size_hint: (1, .15)
            LeftButton:
                size_hint: (.2,1)
                on_release: 
                    car00.load_previous()
                    DurTot.text = str(int(DCV.le_cours.get_duree())) +' mn.'
                    DCV.le_cours.DUREE_GEN = DCV.le_cours.get_duree()
            Label:
                text: 'Aïki Steps'
                font_size: '18sp'
                bold: True
                size_hint: (.6, 1)
                color: (0, 1, 1, 1)
            RightButton:
                size_hint: (.2, 1)
                first_time: True
                on_release: 
                    car00.load_next()
                    DurTot.text = str(int(DCV.le_cours.get_duree())) +' mn.'
                    DCV.le_cours.DUREE_GEN = DCV.le_cours.get_duree()

        Carousel:
            id: car00
            orientation:'horizonal'
            BoxLayout:
                orientation: 'vertical'
                GridLayout:
                    cols: 2
                    size_hint: (1, .6)
                    Label:
                        text: 'Thématique'
                        halign: 'left'
                        valign: 'middle'
                        text_size: self.size
                    LFontInput:
                        thefield: "THEMATIQUE"
                        write_tab: 0
                        text: DCV.le_cours.THEMATIQUE
                        on_text: DCV.le_cours.THEMATIQUE = self.text
                    Label:
                        text: 'Date'
                        halign: 'left'
                        valign: 'middle'
                        text_size: self.size
                    LFontInput:
                        thefield: "DATE"
                        write_tab: 0
                        input_type: 'datetime'
                        text: DCV.le_cours.DATE
                        on_text: DCV.le_cours.DATE = self.text
                    Label:
                        text: 'Objectif Général'
                        halign: 'left'
                        valign: 'middle'
                        text_size: self.size
                    LFontInput:
                        thefield: "OBJ_GEN"
                        write_tab: 0
                        text: DCV.le_cours.OBJ_GEN
                        on_text: DCV.le_cours.OBJ_GEN = self.text
                    Label:
                        text: 'Durée'
                        halign: 'left'
                        valign: 'middle'
                        text_size: self.size
                    DurTot:
                        id: DurTot
                        thefield: "DUREE_GEN"
                        text: str(int(DCV.le_cours.get_duree())) +' mn.'
                        on_text: DCV.le_cours.DUREE_GEN = int(self.text.replace(" mn.",''))
                        
                    Label:
                        text: 'Lieu'
                        halign: 'left'
                        valign: 'middle'
                        text_size: self.size
                    LFontInput:
                        thefield: "LIEU"
                        text: DCV.le_cours.LIEU
                        on_text: DCV.le_cours.LIEU = self.text
                        write_tab: 0
                GridLayout:
                    cols: 2
                    size_hint: (1, .4)
                    BoxLayout:
                        orientation: 'vertical'
                        ToggleButton:
                            height: 40
                            id: enfant
                            text: 'Enfants'
                            group: 'PUBLIC1'
                            thefield: 'PUBLIC1'
                            state: ('normal','down')[DCV.le_cours.PUBLIC1 == self.text]
                            on_press: DCV.le_cours.PUBLIC1 = self.text
                        ToggleButton:
                            id: ado
                            text: 'Adolescents.'
                            group: 'PUBLIC1'
                            thefield: 'PUBLIC1'
                            state: ('normal','down')[DCV.le_cours.PUBLIC1 == self.text]
                            on_press: DCV.le_cours.PUBLIC1 = self.text
                        ToggleButton:
                            id: adulte
                            text: 'Adultes'
                            group: 'PUBLIC1'
                            thefield: 'PUBLIC1'
                            state: ('normal','down')[DCV.le_cours.PUBLIC1 == self.text]
                            on_press: DCV.le_cours.PUBLIC1 = self.text
                        ToggleButton:
                            id: mixage
                            text: 'Mixte'
                            group: 'PUBLIC1'
                            thefield: 'PUBLIC1'
                            state: ('normal','down')[DCV.le_cours.PUBLIC1 == self.text]
                            on_press: DCV.le_cours.PUBLIC1 = self.text
                    BoxLayout:
                        orientation: 'vertical'
                        ToggleButton:
                            id: debutant
                            text: 'Débutants'
                            group: 'PUBLIC2'
                            thefield: 'PUBLIC12'
                            state: ('normal','down')[DCV.le_cours.PUBLIC2 == self.text]
                            on_press: DCV.le_cours.PUBLIC2 = self.text
                        ToggleButton:
                            id: avance
                            text: 'Avancés'
                            group: 'PUBLIC2'
                            thefield: 'PUBLIC2'
                            state: ('normal','down')[DCV.le_cours.PUBLIC2 == self.text]
                            on_press: DCV.le_cours.PUBLIC2 = self.text
                        ToggleButton:
                            id: yudansha
                            text: 'Yudansha'
                            group: 'PUBLIC2'
                            thefield: 'PUBLIC2'
                            state: ('normal','down')[DCV.le_cours.PUBLIC2 == self.text]
                            on_press: DCV.le_cours.PUBLIC2 = self.text
                        ToggleButton:
                            id: mixniv
                            text: 'Mixte'
                            group: 'PUBLIC2'
                            thefield: 'PUBLIC2'
                            state: ('normal','down')[DCV.le_cours.PUBLIC2 == self.text]
                            on_press: DCV.le_cours.PUBLIC2 = self.text
                    
            BoxLayout:
                orientation: 'vertical'
    
                BoxLayout:
                    size_hint:(1, .15)
                    orientation: 'horizontal'
                    LeftButton:
                        size_hint: (.2, 1)
                        on_release: car01.load_previous()
                    Label: 
                        text: 'Description'
                        size_hint:(.4, 1)
                    Label:
                        size_hint:(.2, 1)
                        text: 'P '+str(car01.index+1) + '/' + str(len(car01.slides))
                        halign: 'left'
                        valign: 'middle'
                        text_size: self.size
                    RightButton:
                        size_hint: (.2, 1)
                        on_release: car01.load_next()
                        
                Carousel:
                    id: car01
                    orientation: 'horizontal'
                    scroll_distance: '80sp'
                    details:DCV.le_cours.COURS_STEPS
                    CarouselSlide:
                        details:car01.details[car01.index]
                    
                BoxLayout:
                    orientation: 'horizontal'
                    size_hint: (1, .30)
                    AddButton:
                        id: add_button
                        text: 'Ajouter une page'
                        on_release: self.add_page(car01)
                    DelButton:
                        id: del_button
                        text: 'Supprimer la page'
                        on_release: 
                            del car01.details[car01.index]
                            car01.remove_widget(car01.current_slide)
            
            BoxLayout:
                orientation: 'vertical'
                BoxLayout:
                    size_hint_y: .2
                    orientation: 'vertical'
                    Label:
                        text: 'Resumé'
                    BoxLayout:
                        orientation: 'horizontal'
                        Button:
                            text: 'Copier et RAZ'
                            # on_release: app.select_text(summerized)
                        Button:
                            # text: 'Actualiser'
                            # on_release: summerized.text=app.summerize()
                ScrollView:
                    id: sv
                    TextInput:
                        id: summerized
                        readonly: True
                        foreground_color: (0, 0, 1, 1)
                        size_hint: (1, None)
                        allow_strecht: True
                        height: max(self.minimum_height, sv.height)
                        
                BoxLayout:
                    size_hint_y: .2
                    Button:
                        text: 'Sauvegarder cours'
                    Button:
                        text: 'Charger un cours'

<CarouselSlide@BoxLayout>:
    id: sv
    details: Cours_Steps()
    allow_stretch: True
    ScrollView:
        id: s
        GridLayout:
            height: max(self.minimum_height, sv.height)
            do_scroll_x: 
            padding: 1
            spacing: 1
            cols:2
            size_hint: (1, None)
            Label:
                text: 'Durée'
                size_hint: (.2, .3)
                halign: 'left'
                valign: 'middle'
                text_size: self.size
            BoxLayout:
                size_hint: (.2, .6)
                orientation: 'vertical'
                Label:
                    id: DUREE_STEP
                    thefield: "DUREE_STEP"
                    text: str(int(sli.value)) + " mn."
                    color: (0, 1, 1, 1)
                    halign: 'center'
                    valign: 'top'
                    text_size: self.size
                Slider:
                    id: sli
                    range: (0, 20)
                    step: 1
                    value_track_width: 5
                    cursor_size: ('25sp', '25sp')
                    sensitivity: 'handle'
                    value: sv.details.DUREE_STEP
                    on_touch_up: 
                        sv.details.DUREE_STEP = self.value
                        for i in root.parent.parent.details: print i.OBJ_STEP
                        print '-'*10
                        print sv.details.OBJ_STEP
                        print '='*10
            Label:
                text: 'Objectif'
                size_hint_x: .3
                halign: 'left'
                valign: 'middle'
                text_size: self.size
            LFontInput:
                thefield: "OBJ_STEP"
                text: sv.details.OBJ_STEP
                on_text: sv.details.OBJ_STEP = self.text
            Label:
                text: 'Moyen'
                size_hint_x: .3
                halign: 'left'
                valign: 'middle'
                text_size: self.size
            LFontInput:
                thefield: "MOYEN"
                text: sv.details.MOYEN
                on_text: sv.details.MOYEN = self.text
            Label:
                text: 'Consigne'
                size_hint_x: .3
                halign: 'left'
                valign: 'middle'
                text_size: self.size
            LFontInput:
                thefield: "CONSIGNE"
                text: sv.details.CONSIGNE
                on_text: sv.details.CONSIGNE = self.text
            Label:
                text: 'Observ.'
                size_hint_x: .3
                halign: 'left'
                valign: 'middle'
                text_size: self.size
            LFontInput:
                thefield: "OBSERV"
                text: sv.details.OBSERV
                on_text: sv.details.OBSERV = self.text

<DurTot@Label>:
    color: (1, 1 , 1, 1)
    color: (0, 1, 1, 1)
    font_size: '18sp'
    halign: 'left'
    valign: 'middle'
    text_size: self.size

<LFontInput@TextInput>:
    font_size: '16sp'
    write_tab: False
    input_type: 'text'
    multiline: True
    focus: True
    size_hint_y: .2

<RightButton@Button>:
    size: (50, 50)
    background_color: (1, 1, 1, 1)
    text: '->'

<LeftButton@Button>:
    size: (50, 50)
    background_color: (1, 1, 1, 1)
    text: '<-'
